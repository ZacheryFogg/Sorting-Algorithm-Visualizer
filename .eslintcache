[{"C:\\Users\\Zachery\\Desktop\\SortingVisualizer\\sorting-visualizer\\src\\index.js":"1","C:\\Users\\Zachery\\Desktop\\SortingVisualizer\\sorting-visualizer\\src\\reducers\\index.js":"2","C:\\Users\\Zachery\\Desktop\\SortingVisualizer\\sorting-visualizer\\src\\components\\App.js":"3","C:\\Users\\Zachery\\Desktop\\SortingVisualizer\\sorting-visualizer\\src\\actionCreators\\index.js":"4","C:\\Users\\Zachery\\Desktop\\SortingVisualizer\\sorting-visualizer\\src\\components\\ControlBar.js":"5","C:\\Users\\Zachery\\Desktop\\SortingVisualizer\\sorting-visualizer\\src\\components\\ArrayDisplay.js":"6","C:\\Users\\Zachery\\Desktop\\SortingVisualizer\\sorting-visualizer\\src\\algorithms\\bubbleSort.js":"7","C:\\Users\\Zachery\\Desktop\\SortingVisualizer\\sorting-visualizer\\src\\algorithms\\mergeSort.js":"8","C:\\Users\\Zachery\\Desktop\\SortingVisualizer\\sorting-visualizer\\src\\algorithms\\quickSort.js":"9","C:\\Users\\Zachery\\Desktop\\SortingVisualizer\\sorting-visualizer\\src\\algorithms\\heapSort.js":"10","C:\\Users\\Zachery\\Desktop\\SortingVisualizer\\sorting-visualizer\\src\\algorithms\\selectionSort.js":"11","C:\\Users\\Zachery\\Desktop\\SortingVisualizer\\sorting-visualizer\\src\\algorithms\\insertionSort.js":"12","C:\\Users\\Zachery\\Desktop\\SortingVisualizer\\sorting-visualizer\\src\\components\\Dropdown.js":"13"},{"size":431,"mtime":1610204651340,"results":"14","hashOfConfig":"15"},{"size":4236,"mtime":1610737068908,"results":"16","hashOfConfig":"15"},{"size":299,"mtime":1610807732693,"results":"17","hashOfConfig":"15"},{"size":2707,"mtime":1610587621964,"results":"18","hashOfConfig":"15"},{"size":9307,"mtime":1610996998641,"results":"19","hashOfConfig":"15"},{"size":6755,"mtime":1610996905433,"results":"20","hashOfConfig":"15"},{"size":4058,"mtime":1610633637648,"results":"21","hashOfConfig":"15"},{"size":4251,"mtime":1610400957042,"results":"22","hashOfConfig":"15"},{"size":2833,"mtime":1610401286874,"results":"23","hashOfConfig":"15"},{"size":2738,"mtime":1610454871223,"results":"24","hashOfConfig":"15"},{"size":3060,"mtime":1610564948122,"results":"25","hashOfConfig":"15"},{"size":3310,"mtime":1610585546980,"results":"26","hashOfConfig":"15"},{"size":2261,"mtime":1610810127908,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1als78",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Zachery\\Desktop\\SortingVisualizer\\sorting-visualizer\\src\\index.js",[],["56","57"],"C:\\Users\\Zachery\\Desktop\\SortingVisualizer\\sorting-visualizer\\src\\reducers\\index.js",[],"C:\\Users\\Zachery\\Desktop\\SortingVisualizer\\sorting-visualizer\\src\\components\\App.js",[],"C:\\Users\\Zachery\\Desktop\\SortingVisualizer\\sorting-visualizer\\src\\actionCreators\\index.js",[],"C:\\Users\\Zachery\\Desktop\\SortingVisualizer\\sorting-visualizer\\src\\components\\ControlBar.js",["58","59","60","61","62"],"C:\\Users\\Zachery\\Desktop\\SortingVisualizer\\sorting-visualizer\\src\\components\\ArrayDisplay.js",["63","64","65","66","67"],"C:\\Users\\Zachery\\Desktop\\SortingVisualizer\\sorting-visualizer\\src\\algorithms\\bubbleSort.js",[],"C:\\Users\\Zachery\\Desktop\\SortingVisualizer\\sorting-visualizer\\src\\algorithms\\mergeSort.js",[],"C:\\Users\\Zachery\\Desktop\\SortingVisualizer\\sorting-visualizer\\src\\algorithms\\quickSort.js",[],"C:\\Users\\Zachery\\Desktop\\SortingVisualizer\\sorting-visualizer\\src\\algorithms\\heapSort.js",[],"C:\\Users\\Zachery\\Desktop\\SortingVisualizer\\sorting-visualizer\\src\\algorithms\\selectionSort.js",[],"C:\\Users\\Zachery\\Desktop\\SortingVisualizer\\sorting-visualizer\\src\\algorithms\\insertionSort.js",["68"],"import {\r\n  setCurrentSwappers,\r\n  setArray,\r\n  setCurrentSelectionFocused,\r\n  setCurrentSorted,\r\n  setIsRunning,\r\n  setCurrentInsertionShifter,\r\n} from '../actionCreators';\r\n/*\r\nTypes: shift\r\n\r\n*/\r\nconst insertionSort = (stateArr, dispatch, speed, getSpeed, getIsRunning) => {\r\n  let array = stateArr.slice(0);\r\n  let frames = [];\r\n\r\n  // go through each element in array starting at index 1\r\n  for (let i = 1; i < array.length; i++) {\r\n    // push a frame showing the current index that holds the element to be shifted\r\n    frames.push(['shift', i, array.slice(0)]);\r\n    let j = i - 1;\r\n    let key = array[i];\r\n    // while element is larger than element to it's left, keep swapping\r\n    frames.push(['focus', [j]]);\r\n    let skip = j;\r\n    while (j >= 0 && array[j] > key) {\r\n      frames.push(['swap', [j]]);\r\n      array[j + 1] = array[j];\r\n      array[j] = key;\r\n\r\n      frames.push(['shift', j, array.slice(0)]);\r\n      j--;\r\n      if (j >= 0) frames.push(['focus', [j]]);\r\n    }\r\n    array[j + 1] = key;\r\n    frames.push(['empty']);\r\n  }\r\n  frames.push(['final', array.slice(0)]);\r\n\r\n  console.log(array);\r\n  setTimeout(() => {\r\n    dispatchFrames(frames, dispatch, array, speed, getSpeed, getIsRunning);\r\n    return array;\r\n  }, 100);\r\n};\r\n\r\nconst dispatchFrames = (\r\n  frames,\r\n  dispatch,\r\n  arr,\r\n  speed,\r\n  getSpeed,\r\n  getIsRunning\r\n) => {\r\n  if (!getIsRunning()) {\r\n    dispatch(setCurrentSelectionFocused([]));\r\n    dispatch(setCurrentSwappers([]));\r\n    dispatch(setCurrentSorted([]));\r\n    dispatch(setCurrentInsertionShifter(null));\r\n    dispatch(setIsRunning(false));\r\n    return;\r\n  }\r\n  speed = getSpeed();\r\n  if (!frames.length) {\r\n    dispatch(setCurrentSelectionFocused(arr.map((val, index) => index)));\r\n\r\n    setTimeout(() => {\r\n      dispatch(setCurrentSelectionFocused([]));\r\n      dispatch(setCurrentSorted(arr.map((num, index) => index)));\r\n      dispatch(setCurrentInsertionShifter(null));\r\n      dispatch(setCurrentSwappers([]));\r\n      dispatch(setIsRunning(false));\r\n    }, speed);\r\n    return;\r\n  }\r\n  // min focus swap arr empy\r\n  let dispatchFunc = null;\r\n  const method = frames[0][0];\r\n  let outFrame = [];\r\n  //frame represents whole array\r\n  if (method === 'swap') {\r\n    outFrame = frames[0][1];\r\n    dispatch(setCurrentSelectionFocused([]));\r\n    dispatchFunc = setCurrentSwappers;\r\n  } else if (method === 'shift') {\r\n    outFrame = frames[0][1];\r\n    dispatchFunc = setCurrentInsertionShifter;\r\n    dispatch(setArray(frames[0][2]));\r\n    dispatch(setCurrentSwappers([]));\r\n  } else if (method === 'focus') {\r\n    outFrame = frames[0][1];\r\n    dispatchFunc = setCurrentSelectionFocused;\r\n  } else if (method === 'final') {\r\n    outFrame.push(frames[0][1]);\r\n    dispatchFunc = setCurrentSorted;\r\n  } else if (method === 'empty') {\r\n    dispatchFunc = setCurrentSwappers;\r\n    dispatch(setCurrentSelectionFocused([]));\r\n    dispatch(setCurrentSwappers([]));\r\n    dispatch(setCurrentInsertionShifter(null));\r\n  }\r\n\r\n  // Dispatch the leading frame and pop it off the frame list\r\n  dispatch(dispatchFunc(outFrame));\r\n\r\n  // Recursively call dispatchFrames with updated frames after specified time\r\n  frames.shift();\r\n  setTimeout(() => {\r\n    dispatchFrames(frames, dispatch, arr, speed, getSpeed, getIsRunning);\r\n  }, speed);\r\n};\r\n\r\nexport default insertionSort;\r\n","C:\\Users\\Zachery\\Desktop\\SortingVisualizer\\sorting-visualizer\\src\\components\\Dropdown.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},{"ruleId":"73","severity":1,"message":"77","line":1,"column":27,"nodeType":"75","messageId":"76","endLine":1,"endColumn":35},{"ruleId":"73","severity":1,"message":"78","line":115,"column":7,"nodeType":"75","messageId":"76","endLine":115,"endColumn":29},{"ruleId":"73","severity":1,"message":"79","line":119,"column":7,"nodeType":"75","messageId":"76","endLine":119,"endColumn":16},{"ruleId":"73","severity":1,"message":"80","line":120,"column":7,"nodeType":"75","messageId":"76","endLine":120,"endColumn":15},{"ruleId":"73","severity":1,"message":"81","line":68,"column":11,"nodeType":"75","messageId":"76","endLine":68,"endColumn":22},{"ruleId":"73","severity":1,"message":"82","line":69,"column":11,"nodeType":"75","messageId":"76","endLine":69,"endColumn":22},{"ruleId":"73","severity":1,"message":"83","line":70,"column":11,"nodeType":"75","messageId":"76","endLine":70,"endColumn":20},{"ruleId":"73","severity":1,"message":"84","line":71,"column":11,"nodeType":"75","messageId":"76","endLine":71,"endColumn":27},{"ruleId":"73","severity":1,"message":"85","line":72,"column":11,"nodeType":"75","messageId":"76","endLine":72,"endColumn":26},{"ruleId":"73","severity":1,"message":"86","line":25,"column":9,"nodeType":"75","messageId":"76","endLine":25,"endColumn":13},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'Suspense' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'changeCurrentAlgorithm' is assigned a value but never used.","'pauseSort' is assigned a value but never used.","'isPaused' is assigned a value but never used.","'yellowColor' is assigned a value but never used.","'orangeColor' is assigned a value but never used.","'pinkColor' is assigned a value but never used.","'lightPurpleColor' is assigned a value but never used.","'darkPurpleColor' is assigned a value but never used.","'skip' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]